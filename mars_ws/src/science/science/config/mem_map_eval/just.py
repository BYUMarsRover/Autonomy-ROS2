# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.1
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _just
else:
    import _just

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


EEPROM_SIZE = _just.EEPROM_SIZE
MAX_EEPROM_ADDR = _just.MAX_EEPROM_ADDR
EEPROM_CONFIG_START_ADDR = _just.EEPROM_CONFIG_START_ADDR
EEPROM_UV_SENSITIVTY_ADDR = _just.EEPROM_UV_SENSITIVTY_ADDR
EEPROM_ACTUATOR_EXTEND_RETRACT_TIME_TABLE_ADDR = _just.EEPROM_ACTUATOR_EXTEND_RETRACT_TIME_TABLE_ADDR
EEPROM_ROUTINE_LOOKUP_TABLE_SIZE_ADDR = _just.EEPROM_ROUTINE_LOOKUP_TABLE_SIZE_ADDR
EEPROM_ROUTINE_LOOKUP_TABLE_ADDR = _just.EEPROM_ROUTINE_LOOKUP_TABLE_ADDR
NUM_COEFFS = _just.NUM_COEFFS
SIZE_OF_COEFF = _just.SIZE_OF_COEFF
COEFF_ARRAY_SIZE = _just.COEFF_ARRAY_SIZE
EEPROM_PTR_HUM_COEFF_ARRAY = _just.EEPROM_PTR_HUM_COEFF_ARRAY
EEPROM_PTR_HUM_COEFF_COUNT = _just.EEPROM_PTR_HUM_COEFF_COUNT
EEPROM_PTR_TEMP_COEFF_ARRAY = _just.EEPROM_PTR_TEMP_COEFF_ARRAY
EEPROM_PTR_TEMP_COEFF_COUNT = _just.EEPROM_PTR_TEMP_COEFF_COUNT
NUM_CALIBRATION_PTS = _just.NUM_CALIBRATION_PTS
SIZE_OF_CAL_PT = _just.SIZE_OF_CAL_PT
CURVE_ARRAY_SIZE = _just.CURVE_ARRAY_SIZE
EEPROM_TEMP_CAL_PTS_COUNT = _just.EEPROM_TEMP_CAL_PTS_COUNT
EEPROM_TEMP_CAL_PTS_ARRAY = _just.EEPROM_TEMP_CAL_PTS_ARRAY
EEPROM_HUM_CAL_PTS_COUNT = _just.EEPROM_HUM_CAL_PTS_COUNT
EEPROM_HUM_CAL_PTS_ARRAY = _just.EEPROM_HUM_CAL_PTS_ARRAY

