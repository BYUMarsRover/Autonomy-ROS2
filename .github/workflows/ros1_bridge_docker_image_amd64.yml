name: Docker Image CI (ros1_bridge)

on:
  push:
    branches: [ "main" ]
    paths: 
      - "ros1_bridge/docker/Dockerfile" 
  pull_request:
    branches: [ "main" ]
    paths:
      - "ros1_bridge/docker/Dockerfile"

jobs:

  docker:

    runs-on: ubuntu-latest

    steps:
    - name: Free disk space
      run: |
        sudo docker rmi $(docker image ls -aq) >/dev/null 2>&1 || true
        sudo rm -rf \
          /usr/share/dotnet /usr/local/lib/android /opt/ghc \
          /usr/local/share/powershell /usr/share/swift /usr/local/.ghcup \
          /usr/lib/jvm || true
        sudo apt install aptitude -y >/dev/null 2>&1
        sudo aptitude purge aria2 ansible azure-cli shellcheck rpm xorriso zsync \
          esl-erlang firefox gfortran-8 gfortran-9 google-chrome-stable \
          google-cloud-sdk imagemagick \
          libmagickcore-dev libmagickwand-dev libmagic-dev ant ant-optional kubectl \
          mercurial apt-transport-https mono-complete libmysqlclient \
          unixodbc-dev yarn chrpath libssl-dev libxft-dev \
          libfreetype6 libfreetype6-dev libfontconfig1 libfontconfig1-dev \
          snmp pollinate libpq-dev postgresql-client powershell ruby-full \
          sphinxsearch subversion mongodb-org azure-cli microsoft-edge-stable \
          -y -f >/dev/null 2>&1
        sudo aptitude purge google-cloud-sdk -f -y >/dev/null 2>&1
        sudo aptitude purge microsoft-edge-stable -f -y >/dev/null 2>&1 || true
        sudo apt purge microsoft-edge-stable -f -y >/dev/null 2>&1 || true
        sudo aptitude purge '~n ^mysql' -f -y >/dev/null 2>&1
        sudo aptitude purge '~n ^php' -f -y >/dev/null 2>&1
        sudo aptitude purge '~n ^dotnet' -f -y >/dev/null 2>&1
        sudo apt-get autoremove -y >/dev/null 2>&1
        sudo apt-get autoclean -y >/dev/null 2>&1
        
    - name: Checkout the repo
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
       username: ${{ secrets.DOCKERHUB_USERNAME }}
       password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push to DockerHub
      uses: docker/build-push-action@v6
      with:
       context: "{{defaultContext}}:ros1_bridge/docker"
       platforms: linux/amd64
       push: true
       tags: ${{ secrets.DOCKERHUB_USERNAME }}/ros1_bridge:latest
